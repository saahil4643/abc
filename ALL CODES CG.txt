use SEIT;
create table medicine(mid int(29),medname varchar(28),price int(10),Quantity int(20));
insert into medicine values(1,'Crocin',20,25),(2,'Calpol',355,30);
select *from medicine;
create table neworder(mid int(20),odate date,newquantity int(20));
desc neworder;
delimiter $$
create trigger newordermedicine
after update on medicine
for each row
begin
if new.quantity<20 then
insert into neworder values(new.mid,sysdate(),200);
end if;
end;
$$

select*from neworder;
$$
update medicine set quantity =15 where mid=1;
$$
select*from medicine;
$$
select*from neworder;
$$

use SEIT;
create table tutorials(ID int primary key,Title VARCHAR(100),Author VARCHAR(40),Date Varchar(40));
insert into tutorials values(1,'Java','Krishna','2019-09-01');
insert into tutorials values(2,'JFreecharts','Satish','2019-05-01');
insert into tutorials values(3,'JavaSprings','Amit','2019-05-01');
insert into tutorials values(4,'Android','Ram','2019-03-01');
insert into tutorials values(5,'Cassandra','Pruthvi','2019-09-01');

select*from tutorials;
create table backup(ID INT,TITLE VARCHAR(100),AUTHOR VARCHAR(40),DATE VARCHAR(40));

DELIMITER //
CREATE PROCEDURE ExampleProc()
BEGIN
DECLARE done INT DEFAULT 0;
DECLARE tutorialID INTEGER;
DECLARE tutorialTitle,tutorialAuthor,tutorialDate VARCHAR(20);
DECLARE cur CURSOR FOR SELECT*FROM tutorials;
DECLARE CONTINUE HANDLER FOR NOT FOUND SET done=1;
OPEN cur;
label: LOOP
FETCH cur INTO tutorialID,tutorialTitle,tutorialAuthor,tutorialDate;
INSERT INTO backup values(tutorialID,tutorialTitle,tutorialAuthor,tutorialDate);
IF done=1 THEN LEAVE label;
END IF;
END LOOP;
CLOSE cur;
END//

DELIMITER ;
CALL ExampleProc;
select*from backup;


